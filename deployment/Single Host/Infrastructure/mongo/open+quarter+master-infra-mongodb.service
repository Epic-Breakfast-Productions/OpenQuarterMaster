# Service file for running an instance of MongoDB.
#  Author: Greg Stewart
#  https://www.freedesktop.org/software/systemd/man/systemd.service.html
#
#  Mongo tags: https://hub.docker.com/_/mongo?tab=tags
#

[Unit]
Description=Mongo server for Open Quartermaster. Version ${version}, using MongoDB tagged to "7".
Documentation=https://github.com/Epic-Breakfast-Productions/OpenQuarterMaster/tree/main/software/Infrastructure
After=docker.service
Wants=network-online.target docker.socket
Requires=docker.socket

[Service]
Type=simple
Restart=always
TimeoutSec=5m
Environment="CONTAINER_NAME=oqm_infra_mongo"
Environment="IMAGE_NAME=mongo"
Environment="IMAGE_VERSION=7"
Environment="ENV_CONFIG_FILE=/tmp/oqm/serviceConfig/infra/mongodb/env.list"

ExecStartPre=/bin/bash -c "oqm-captain --ensure-container-setup"
#ExecStartPre=/bin/bash -c "/usr/bin/docker container inspect oqm_mongo 2> /dev/null || "
ExecStartPre=/bin/bash -c "/usr/bin/docker stop -t 10 $CONTAINER_NAME || echo 'Could not stop mongo container'"
ExecStartPre=/bin/bash -c "/usr/bin/docker rm $CONTAINER_NAME || echo 'Could not remove mongo container'"
ExecStartPre=/bin/bash -c "/usr/bin/docker pull $IMAGE_NAME:$IMAGE_VERSION || echo 'Could not pull image.'"
# setup env list file
ExecStartPre=/bin/bash -c "mkdir -p /tmp/oqm/serviceConfig/infra/mongodb"
ExecStartPre=/bin/bash -c "touch $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "chmod 600 $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "truncate -s 0 $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"MONGO_INITDB_ROOT_USERNAME=$(oqm-config -g 'infra.mongodb.adminUser')\n\" >> $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"MONGO_INITDB_ROOT_PASSWORD=$(oqm-config -g 'infra.mongodb.adminPass')\n\" >> $ENV_CONFIG_FILE"
#ExecStartPre=/bin/bash -c "printf printf \"%s\n\" \"$(oqm-config -g 'infra.mongodb.keyFileContent' | base64)\""
ExecStartPre=/bin/bash -c "mkdir -p /data/oqm/db/mongo/"
ExecStartPre=/bin/bash -c "touch /data/oqm/db/mongo/keyfile"
ExecStartPre=/bin/bash -c "chmod 600 /data/oqm/db/mongo/keyfile"
ExecStartPre=/bin/bash -c "printf \"$(oqm-config -g 'infra.mongodb.keyFileContent' | base64)\" > /data/oqm/db/mongo/keyfile"

ExecStart=/bin/bash -c "/usr/bin/docker run \
                                 --name $CONTAINER_NAME \
                                 --network=oqm-internal \
                                 -v /data/oqm/db/mongo/:/data/db  \
                                 --env-file /tmp/oqm/serviceConfig/infra/mongodb/env.list \
                                 $IMAGE_NAME:$IMAGE_VERSION mongod --keyFile /data/db/keyfile --replSet rs0"
ExecStartPost=/bin/bash -c "running=\"false\"; \
                            sleep 10s; \
                            while [ \"$running\" != \"true\" ]; do \
                                sleep 1s; \
                                status=\"$(docker container inspect -f '{{.State.Running}}' $CONTAINER_NAME)\"; \
                                if [ \"$status\" != \"true\" ]; then \
                                    echo \"Container was stopped!\"; \
                                    exit 1; \
                                fi; \
                                /usr/bin/docker exec $CONTAINER_NAME mongosh --eval \"\"; \
                                if [ \"$?\" = \"0\" ]; then \
                                    echo \"Mongo container running and available!\"; \
                                    running=\"true\"; \
                                fi \
                            done \
                            "
ExecStartPost=/bin/bash -c "/usr/bin/docker exec $CONTAINER_NAME mongosh -u \"$(oqm-config -g 'infra.mongodb.adminUser')\" -p \"$(oqm-config -g 'infra.mongodb.adminPass')\" --eval \"rs.initiate({'_id':'rs0', 'members':[{'_id':0,'host':'localhost:27017'}]})\" || echo 'Probably already initialized.'"

ExecStop=/bin/bash -c "/usr/bin/docker stop -t 10 $CONTAINER_NAME || echo 'Could not stop mongo container'"
ExecStopPost=/bin/bash -c "/usr/bin/docker rm $CONTAINER_NAME || echo 'Could not remove mongo container'"

[Install]
WantedBy=multi-user.target
