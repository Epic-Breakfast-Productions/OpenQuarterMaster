# Service file for running an instance of Keycloak.
#  Author: Greg Stewart
#  https://www.freedesktop.org/software/systemd/man/systemd.service.html
#
#  Keycloak tags: https://quay.io/repository/keycloak/keycloak?tab=tags
#
# - https://www.keycloak.org/server/containers
# - https://www.keycloak.org/getting-started/getting-started-docker
# - https://www.keycloak.org/server/db
#

[Unit]
Description=Keycloak server for Open Quartermaster. Version ${version}, using Keycloak tagged to "22.0.1".
Documentation=https://github.com/Epic-Breakfast-Productions/OpenQuarterMaster/tree/main/software/Infrastructure
After=docker.service
Wants=network-online.target
Requires=docker.socket
Requires=open\x2bquarter\x2bmaster\x2dinfra\x2dpostgres.service

[Service]
Type=simple
Restart=always
TimeoutSec=5m
# setup operating variables
Environment="CONTAINER_NAME=oqm_infra_keycloak"
Environment="IMAGE_NAME=quay.io/keycloak/keycloak"
Environment="IMAGE_VERSION=22.0"
Environment="ENV_CONFIG_FILE=/tmp/oqm/serviceConfig/infra/keycloak/env.list"

ExecStartPre=/bin/bash -c "oqm-captain --ensure-container-setup"
#ExecStartPre=/bin/bash -c "/usr/bin/docker container inspect oqm_mongo 2> /dev/null || "
ExecStartPre=/bin/bash -c "mkdir -p /tmp/oqm/serviceConfig/infra/keycloak"
ExecStartPre=/bin/bash -c "touch $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "chmod 600 $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "truncate -s 0 $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"KEYCLOAK_ADMIN=$(oqm-config -g 'infra.keycloak.adminUser')\n\" >> $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"KEYCLOAK_ADMIN_PASSWORD=$(oqm-config -g 'infra.keycloak.adminPass')\n\" >> $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"KC_DB=postgres\n\" >> $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"KC_DB_USERNAME=$(oqm-config -g 'infra.keycloak.postgresUser')\n\" >> $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"KC_DB_PASSWORD=$(oqm-config -g 'infra.keycloak.postgresPass')\n\" >> $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"KC_DB_URL_HOST=$(oqm-config -g 'infra.postgres.host')\n\" >> $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"KC_DB_URL_PORT=$(oqm-config -g 'infra.postgres.port')\n\" >> $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"KC_DB_URL_DATABASE=$(oqm-config -g 'infra.keycloak.postgresDb')\n\" >> $ENV_CONFIG_FILE"
ExecStartPre=/bin/bash -c "printf \"KC_HEALTH_ENABLED=true\n\" >> $ENV_CONFIG_FILE"

ExecStartPre=/bin/bash -c "/usr/bin/docker stop -t 10 $CONTAINER_NAME || echo 'Could not stop keycloak container'"
ExecStartPre=/bin/bash -c "/usr/bin/docker rm $CONTAINER_NAME || echo 'Could not remove keycloak container'"
ExecStartPre=/bin/bash -c "/usr/bin/docker pull $IMAGE_NAME:$IMAGE_VERSION || echo 'Could not pull keycloak image.'"
ExecStartPre=/bin/bash -c "/etc/oqm/accountScripts/postgres-assert-account.sh -u \"$(oqm-config -g 'infra.keycloak.postgresUser')\" -p \"$(oqm-config -g 'infra.keycloak.postgresPass')\""
ExecStartPre=/bin/bash -c "/usr/bin/docker exec oqm_infra_postgres psql postgres -U \"$(oqm-config -g 'infra.keycloak.postgresUser')\" -tXAc \"SELECT 1 FROM pg_database WHERE datname = '$(oqm-config -g 'infra.keycloak.postgresDb')'\" | grep -q \"^1$\" || /usr/bin/docker exec oqm_infra_postgres psql postgres -U \"$(oqm-config -g 'infra.keycloak.postgresUser')\" -tXAc \"create database $(oqm-config -g 'infra.keycloak.postgresDb') with encoding 'UTF8';\""

ExecStart=/bin/bash -c "/usr/bin/docker run \
                                 --name $CONTAINER_NAME \
                                 --add-host host.docker.internal:host-gateway \
                                 --network=oqm-internal \
                                 -p 8115:8080 \
                                 --env-file $ENV_CONFIG_FILE \
                                 -v /etc/oqm/static/keycloak/import:/opt/keycloak/data/import \
                                 $IMAGE_NAME:$IMAGE_VERSION start-dev --import-realm"
#  --proxy edge --hostname-path=/infra/keycloak/

# Ensure is up

ExecStartPost=/bin/bash -c "running=\"false\"; \
                            while [ \"$running\" != \"true\" ]; do \
                                status=\"$(docker container inspect -f '{{.State.Running}}' $CONTAINER_NAME 2> /dev/null)\"; \
                                if [ \"$status\" == \"true\" ]; then \
                                    echo \"Container running!\"; \
                                    running=\"true\"; \
                                    continue; \
                                fi; \
                                sleep 0.05s; \
                                if [ $SECONDS -gt 30 ]; then \
                                    echo \"Container not running after 30 seconds!\"; \
                                    exit 1; \
                                fi; \
                            done; \
                            "
ExecStartPost=/bin/bash -c "running=\"false\"; \
                            servicePort=$(oqm-config -g 'infra.keycloak.port'); \
                            while [ \"$running\" != \"true\" ]; do \
                                sleep 1s; \
                                status=\"$(docker container inspect -f '{{.State.Running}}' $CONTAINER_NAME)\"; \
                                if [ \"$status\" != \"true\" ]; then \
                                    echo \"Container was stopped!\"; \
                                    exit 1; \
                                fi; \
                                hcGet=\"$(/usr/bin/curl -k \"http://localhost:8115/health\")\"; \
                                echo \"Health check get: $hcGet\"; \
                                status=\"$(jq --argjson hcGet \"$hcGet\" -nr '$hcGet.status')\"; \
                                echo \"Status: $status\"; \
                                if [ \"$status\" = \"UP\" ]; then \
                                    echo \"Keycloak running and available!\"; \
                                    running=\"true\"; \
                                fi; \
                            done; \
                            "
ExecStartPost=/bin/bash -c "/etc/oqm/static/keycloak/kc-realm-manager --update-realm"

ExecStop=/bin/bash -c "stop -t 10 $CONTAINER_NAME || echo 'Could not stop keycloak container'"
ExecStopPost=/bin/bash -c "/usr/bin/docker rm $CONTAINER_NAME || echo 'Could not remove keycloak container'"

[Install]
WantedBy=multi-user.target
