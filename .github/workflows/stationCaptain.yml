# This is a basic workflow to help you get started with Actions

name: CI - Manager - Station Captain

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ "**" ]
    paths:
      - "deployment/Single Host/Station-Captain/**"
      - ".github/workflows/stationCaptain.yml"
  pull_request:
    branches: [ "**" ]
    paths:
      - "deployment/Single Host/Station-Captain/**"
      - ".github/workflows/stationCaptain.yml"
  workflow_call:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
#defaults:
#  run:
#    working-directory: "deployment/Single Host/Station-Captain/"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:  # This workflow contains a single job called "build"
  runPythonUnitTests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12" ]
    defaults:
      run:
        working-directory: "deployment/Single Host/Station-Captain/unitTests/"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install pytest pytest-md pytest-emoji
      - name: Run pytest
        uses: pavelzw/pytest-action@v2
        with:
          verbose: true
          emoji: true
          job-summary: true
#          custom-arguments: '-q'
          click-to-expand: true
          report-title: 'Test Report'
  
  buildInstallers:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "deployment/Single Host/Station-Captain/"
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Install dependencies
        run: sudo apt-get install -y dpkg-dev rpm rpmlint jq asciidoctor

        # Runs a single command using the runners shell
      - name: Make Installers
        run: ./makeInstallers.sh
      - name: Archive Installers
        uses: actions/upload-artifact@v2
        with:
          name: Installers Produced
          path: "deployment/Single Host/Station-Captain/bin"

  # This workflow contains a single job called "build"
  testUbuntu:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "deployment/Single Host/Station-Captain/"
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      -
        uses: actions/checkout@v3
      -
        name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      -
        name: Install dependencies
        run: sudo apt-get install -y dpkg-dev rpm rpmlint jq asciidoctor
      -
        name: Build with Maven
        run: ./mvnw verify -Dtest.installer="deb" -Dtest.os="ubuntu"
        working-directory: deployment/Single Host/Station-Captain/stationCaptainTest
        
        # Runs a single command using the runners shell
      -
        name: Archive Cucumber Reports Ubuntu
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Cucumber Test Reports Ubuntu
          path: "deployment/Single Host/Station-Captain/stationCaptainTest/target/test-reports/*"
      -
        name: Cucumber Test Results to Annotation Ubuntu
        if: always()
        uses: deblockt/cucumber-report-annotations-action@v1.7
        with:
          name: Ubuntu Cucumber Reports
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "deployment/Single Host/Station-Captain/stationCaptainTest/target/test-reports/report.json"
  # This workflow contains a single job called "build"
  testFedora:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "deployment/Single Host/Station-Captain/"
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      -
        uses: actions/checkout@v3
      -
        name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      -
        name: Install dependencies
        run: sudo apt-get install -y dpkg-dev rpm rpmlint jq asciidoctor
      -
        name: Build with Maven
        run: ./mvnw verify -Dtest.installer="rpm" -Dtest.os="fedora"
        working-directory: deployment/Single Host/Station-Captain/stationCaptainTest
      
        # Runs a single command using the runners shell
      -
        name: Archive Cucumber Reports Fedora
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Cucumber Test Reports Fedora
          path: "deployment/Single Host/Station-Captain/stationCaptainTest/target/test-reports/*"
      -
        name: Cucumber Test Results to Annotation Fedora
        if: always()
        uses: deblockt/cucumber-report-annotations-action@v1.7
        with:
          name: Fedora Cucumber Reports
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "deployment/Single Host/Station-Captain/stationCaptainTest/target/test-reports/report.json"