# This is a basic workflow to help you get started with Actions

name: Deployment - Repos - Main

# Controls when the workflow will run
on:
  release:
    types: [published, edited, deleted]
  workflow_call:
  workflow_dispatch:
defaults:
  run:
    working-directory: "utilities"
jobs:
  deployToRepos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          ref: update-main-repos-staging
      - name: Update branch
        run: git rebase -f origin/main
      - name: Install dependencies
        run: sudo apt-get install -y curl dpkg-dev
      - name: Setup Signing Key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.OQM_GPG_KEY }}
          passphrase: ${{ secrets.OQM_GPG_KEY_PASS }}
      - name: Update Main Repo Files
        run: ./update-main-repositories.sh
      - name: Commit new repo files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Updated Repositories after release
          branch: update-main-repos-staging
          create_branch: true
      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const { repo, owner } = context.repo;
            const pulls = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              head: 'update-main-repos-staging',
              base: 'main',
              title: '[Delpoy - Repos - Main] Update repo files after release'
              state: 'open',
            });
            
            if (pulls.data.length < 1) {
              console.log('No pull request present. Creating a new one.')
              await github.rest.pulls.create({
                title: '[Delpoy - Repos - Main] Update repo files after release',
                owner: owner,
                repo: repo,
                head: 'update-main-repos-staging',
                base: 'main',
                body: [
                  'This PR is auto-generated by',
                  '[actions/github-script](https://github.com/actions/github-script), ${context.job}',
                ].join('\n'),
              });
            } else {
              console.log('Pull request present. Commenting on it.')
              const existingPR = pulls.data[0];
              await github.rest.pulls.update({
                owner: owner,
                repo: repo,
                pull_number: existingPR.number,
                body: [
                  existingPR.body,
                  `Updated by Job ${context.job}`,
                ].join('\n'),
              });
            }

